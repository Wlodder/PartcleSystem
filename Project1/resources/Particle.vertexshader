#version 330 core
// influenced by http://www.opengl-tutorial.org/beginners-tutorials/tutorial-4-a-colored-cube/

layout(location = 0) in vec3 squareVertices;
layout(location = 1) in vec4 xyzs; // position of center of particle
layout(location = 2) in vec4 color; // color of particle

// output data
out vec2 UV;
out vec4 particlecolor;

// perspective stuff
uniform vec3 cameraRight_worldspace;
uniform vec3 cameraUp_worldspace;
uniform mat4 VP; // Model-View-Projection matrix

void main()
{
	float particleSize = xyzs.w; 
	vec3 particleCenter_worldspace = xyzs.xyz;
	
	vec3 vertexPosition_worldspace = 
		particleCenter_worldspace
		+ cameraRight_worldspace * squareVertices.x * particleSize
		+ cameraUp_worldspace * squareVertices.y * particleSize;

	// Output position of the vertex
	gl_Position = VP * vec4(vertexPosition_worldspace, 1.0f);
	
	//UV of the vertex. No special space for this one.
	UV = squareVertices.xy + vec2(0.5, 0.5);
	particlecolor = color;
}

